asyncapi: '2.4.0'
id: 'urn:io.microcks.generic.A-1'
info:
  title: A
  version: '1'
  description: This is a generic Event Driven API definition that sends B events.
defaultContentType: application/json

servers:
  wsServer:
    url: 'wss://example.com/ws'
    protocol: 'wss'
  kafkaServer:
    url: 'kafka://localhost:9092'
    protocol: 'kafka'
  amqpServer:
    url: 'amqp://localhost:5672'
    protocol: 'amqp'

channels:
  B:
    bindings:
      ws:
        method: POST
        server: wsServer
      amqp:
        exchange:
          name: 'events'
          type: 'topic'
        queue:
          name: 'bQueue'
          durable: true
    subscribe:
      message:
        bindings:
          kafka:
            key:
              type: string
              description: Timestamp of event as milliseconds since 1st Jan 1970
          amqp:
            routingKey: 'b.routing.key'
        '$ref': '#/components/messages/BMsg'

components:
  messages:
    BMsg:
      payload:
        '$ref': '#/components/schemas/BType'
      examples:
        - name: Reference
          payload: {"a":1}
  schemas:
    BType:
      type: object
      properties:
        a:
          type: number
